

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class BancoJDBC {
    private Connection con;
    private Statement stmt;

    public BancoJDBC() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("Driver Encontrado");
        } catch (ClassNotFoundException e) {
            System.out.println("Driver não encontrado" + e);
            System.out.println("Error: " + e.getMessage());
        }

        String url = "jdbc:mysql://localhost:3306/Banco";
        String user = "root";
        String password = "";

        try {
            con = DriverManager.getConnection(url, user, password);
            stmt = con.createStatement();
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }

        inserirRegistros();
        listarRegistros();
        executarMenu();
    }

    private void executarMenu() {
        int opcao;

        do {
            String opcaoStr = JOptionPane.showInputDialog(
                    "----- MENU -----\n" +
                            "1 - INSERIR\n" +
                            "2 - ALTERAR\n" +
                            "3 - CONSULTAR\n" +
                            "4 - EXCLUIR\n" +
                            "5 - MOSTRAR MEDIA SALARIAL\n" +
                            "6 - SAIR\n" +
                            "Escolha uma opção:"
            );

            opcao = Integer.parseInt(opcaoStr);

            switch (opcao) {
                case 1:
                    inserirRegistros();
                    break;
                case 2:
                    String matriculaStr = JOptionPane.showInputDialog("Digite a matrícula:");
                    int matricula = Integer.parseInt(matriculaStr);

                    String novoSalario = JOptionPane.showInputDialog("Digite o novo salário:");
                    alterarRegistros(novoSalario, matricula);
                    break;
                case 3:
                    listarRegistros();
                    break;
                case 4:
                    String matExcluirStr = JOptionPane.showInputDialog("Digite a matrícula para excluir:");
                    int matExcluir = Integer.parseInt(matExcluirStr);
                    apagarRegistros(matExcluir);
                    break;
                case 5:
                    mostrarMediaSalarial();
                    break;
                case 6:
                    JOptionPane.showMessageDialog(null, "Saindo do programa.");
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Opção inválida. Tente novamente.");
            }

        } while (opcao != 6);
    }

    private void inserirRegistros() {
        try {
            stmt.executeUpdate("INSERT INTO Empregado VALUES (5,'Fabrício','6191387754','16780.00')");
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private void listarRegistros() {
        try {
            ResultSet rs;
            rs = stmt.executeQuery("SELECT * FROM Empregado");
            while (rs.next()) {
                int matricula = rs.getInt("matricula");
                String nome = rs.getString("nome");
                String telefone = rs.getString("telefone");
                float salario = rs.getFloat("salario");
                System.out.println(matricula + "\t" + nome + "\t" +
                        telefone + "\t" + salario);
            }
        } catch (SQLException e) {
            System.out.println("Erro: " + e.getMessage());
        }
    }

    private void alterarRegistros(String sal, int mat) {
        try {
            stmt.executeUpdate("UPDATE Empregado SET salario = '" + sal + "' WHERE matricula=" + mat + "");
        } catch (SQLException e) {
            System.out.println("Erro: " + e.getMessage());
        }
    }

    private void apagarRegistros(int mat) {
        try {
            stmt.executeUpdate("DELETE FROM Empregado WHERE matricula=" + mat + "");
        } catch (SQLException e) {
            System.out.println("Erro: " + e.getMessage());
        }
    }

    private void mostrarMediaSalarial() {
        try {
            ResultSet rs = stmt.executeQuery("SELECT AVG(salario) AS media FROM Empregado");
            if (rs.next()) {
                float mediaSalarial = rs.getFloat("media");
                JOptionPane.showMessageDialog(null, "Média Salarial: " + mediaSalarial);
            }
        } catch (SQLException e) {
            System.out.println("Erro ao calcular média salarial: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        BancoJDBC bancoJDBC = new BancoJDBC();
    }
}
